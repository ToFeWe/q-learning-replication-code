#! python


def build(ctx):

    # Experimental data
    ctx(
        features="run_py_script",
        source="clean_experimental_data.py",
        target=[
            ctx.path_to(ctx, "OUT_DATA", f"data_individual_level.pickle"),
            ctx.path_to(ctx, "OUT_DATA", f"data_individual_level.feather"),
            ctx.path_to(ctx, "OUT_DATA", f"data_individual_level.csv"),
            ctx.path_to(ctx, "OUT_DATA", f"data_group_level.pickle"),
            ctx.path_to(ctx, "OUT_DATA", f"data_group_level.feather"),
            ctx.path_to(ctx, "OUT_DATA", f"data_group_level.csv"),
            ],
        deps=[            
            ctx.path_to(ctx, "IN_DATA", "session_info_experiments.json"),
            ctx.path_to(ctx, "IN_DATA_MANAGEMENT", "utils_experimental_data.py"),
            # TODO: Add experimental data here
        ],
        name=f"clean_experimental_data",
    )

    # Simulation data
    for n_agents in [2, 3]:
        # Grid Search
        all_deps_grid = [
            ctx.path_to(
                ctx,
                f"IN_SIMULATION_GRID_{n_agents}_AGENT",
                f"simulated_arrays_{n_agents}_agents_seed_{ix}.pickle",
            )
            for ix in range(1, 1001)
        ]
        all_deps_grid.append(
            ctx.path_to(ctx, "IN_DATA_MANAGEMENT", "utils_load_data.py")
        )
        ctx(
            features="run_py_script",
            source="load_grid_simulation_data.py",
            target=ctx.path_to(ctx, "OUT_DATA", f"grid_{n_agents}_agents.pickle"),
            deps=all_deps_grid,
            append=str(n_agents),
            name=f"load_grid_simulation_data_{n_agents}_n_agents",
        )

        # Super star simulation

        all_deps_super_star = [
            ctx.path_to(
                ctx,
                f"IN_SIMULATION_SUPER_STARS_{n_agents}_AGENT",
                f"simulated_arrays_{n_agents}_agents_seed_{ix}.pickle",
            )
            for ix in range(1, 1001)
        ]
        all_deps_super_star.append(
            ctx.path_to(ctx, "IN_DATA_MANAGEMENT", "utils_load_data.py")
        )
        ctx(
            features="run_py_script",
            source="load_super_star_data.py",
            target=ctx.path_to(
                ctx, "OUT_DATA", f"all_super_stars_{n_agents}_agents.pickle"
            ),
            deps=all_deps_super_star,
            append=str(n_agents),
            name=f"load_super_stars_data_{n_agents}_n_agents",
        )

        ctx(
            features="run_py_script",
            source="super_star_for_otree.py",
            target=[
                ctx.path_to(
                    ctx, "OUT_DATA", f"otree_super_star_{n_agents}_agents.json"
                ),
                ctx.path_to(
                    ctx, "OUT_DATA", f"otree_super_star_{n_agents}_agents.pickle"
                ),
            ],
            deps=[
                ctx.path_to(
                    ctx,
                    f"IN_SIMULATION_{n_agents}_AGENT",
                    f"experiment_super_star_{n_agents}_agent.pickle",
                ),
                ctx.path_to(
                    ctx,
                    "IN_SIMULATION_PARAMETER",
                    f"parameter_super_star_{n_agents}_agent.json",
                ),
            ],
            append=str(n_agents),
            name=f"super_star_for_otree_{n_agents}_n_agents",
        )

    # Part of the simulation data we use for the comparisons to 
    # experimental data.
    for n_agents in [2, 3]:
        ctx(
            features="run_py_script",
            source="subset_simulation_data.py",
            target=[
                ctx.path_to(
                    ctx, "OUT_DATA", f"super_star_avg_prices_{n_agents}_agents.pickle"
                ),
                ctx.path_to(
                    ctx, "OUT_DATA", f"entire_price_grid_avg_prices_{n_agents}_agents.pickle"
                ),
            ],
            deps=[
                ctx.path_to(
                    ctx,
                    f"IN_SIMULATION_PARAMETER",
                    f"parameter_super_star_{n_agents}_agent.json",
                ),
                ctx.path_to(
                    ctx,
                    "IN_SIMULATION_PARAMETER",
                    f"parameter_{n_agents}_agent_cases.json",
                ),
                ctx.path_to(
                    ctx,
                    "OUT_DATA",
                    f"grid_{n_agents}_agents.pickle",
                ),

            ],
            append=str(n_agents),
            name=f"subset_simulation_data_{n_agents}_n_agents",
        )
